services:
  db:
    container_name: kotobamichi-db
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kotobamichi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    image: kotobamichi-migration:latest
    build:
      context: .
      dockerfile: Dockerfile.migration
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/kotobamichi
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  app:
    image: kotobamichi-backend:latest
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/kotobamichi
      - PORT=3000
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173}
      - COOKIE_SECURE=${COOKIE_SECURE:-false}
      - COOKIE_SAMESITE=${COOKIE_SAMESITE:-lax}
      - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN:-15m}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN:-7d}
      - COOKIE_SECRET=${COOKIE_SECRET:-}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
