services:
  db:
    container_name: kotobamichi-db
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kotobamichi}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kotobamichi-network

  migration:
    image: ghcr.io/infinit3hq/kotobamichi-backend-migration:latest
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    restart: "no"
    networks:
      - kotobamichi-network

  app:
    image: ghcr.io/infinit3hq/kotobamichi-backend:latest
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - PORT=${PORT:-3000}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-3000}/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - kotobamichi-network

volumes:
  postgres_data:

networks:
  kotobamichi-network:
    driver: bridge
